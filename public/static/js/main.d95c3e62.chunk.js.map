{"version":3,"sources":["store/actionTypes/operations.js","helpers/functions.js","helpers/constants.js","store/reducers/operations.js","store/reducers/filters.js","store/actionTypes/filters.js","store/index.js","configs/axios.js","components/WalletInfo/index.jsx","components/UI/Modal/index.jsx","helpers/validation.js","components/UI/Forms/CreateOperation/index.jsx","components/Header.jsx","containers/Header.jsx","store/actions/operations.js","store/selectors/index.js","components/OperationListItem/index.jsx","components/OperationList/index.jsx","components/OperationWeek/index.jsx","components/UI/Forms/RemoveOperation/index.jsx","components/TimeTable.jsx","containers/TimeTable.jsx","App.js","serviceWorker.js","index.js"],"names":["actionTypes_operations","moneyFormat","value","concat","toFixed","operationName","type","_operations","Object","defineProperty","operationCssClass","_operations2","calcBalance","operations","initialBalance","arguments","length","undefined","reduce","balance","operation","amount","sortOperations","opA","opB","timestamp","initialState","operationHandler","_operationHandler","actionTypes","state","_ref","oldBalance","objectSpread","_ref2","toConsumableArray","_ref3","filter","item","id","period","filtersHandler","logger","createLogger","collapsed","store","createStore","combineReducers","action","filters","composeWithDevTools","applyMiddleware","thunk","instance","axios","create","baseURL","process","defaults","headers","common","WalletInfo","react_default","a","createElement","ReactModal","setAppElement","Modal","show","dismiss","proceed","ModalContent","cancel","component","props","objectWithoutProperties","lib_default","isOpen","onRequestClose","className","overlayClassName","assign","confirm","createConfirmation","confirmable","required","mustBeNumber","isNaN","composeValidators","_len","validators","Array","_key","error","validator","CreateOperation","submitHandler","_ref$dismiss","options","initialValues","description","react_final_form_es","onSubmit","form","Number","Date","getTime","reset","render","min","handleSubmit","submitting","pristine","name","validate","input","tabIndex","map","option","key","_ref4","meta","placeholder","step","touched","placeholer","_ref5","htmlFor","cols","rows","disabled","onClick","Header","addOperation","Fragment","components_WalletInfo","mapDispatchToProps","asyncToGenerator","regenerator_default","mark","_callee2","dispatch","res","wrap","_context2","prev","next","post","sent","status","console","abrupt","stop","this","_x2","apply","connect","getPeriod","getGroupedOperations","createSelector","groups","weekIndex","moment","format","push","getSortedOperations","entries","forEach","slicedToArray","week","operationsInWeek","sort","OperationListItem","_ref$operation","removeHandler","editHandler","fromNow","OperationList","handlers","components_OperationListItem","OperationWeek","weekBorders","time","periodFormat","mounth","date","start","startOf","end","endOf","parsePeriodBorders","react_custom_scrollbars_lib","components_OperationList","RemoveOperation","TimeTable","fetchOperations","removeOperation","useEffect","log","then","catch","components_OperationWeek","_callee","_context","get","data","_x","_callee3","_context3","delete","_x3","App","containers_Header","containers_TimeTable","Component","Boolean","window","location","hostname","match","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d95c3e62.chunk.js","sourcesContent":["export default {\r\n  ADD_OPERATION: 'ADD_OPERATION',\r\n  FETCH_OPERATIONS: 'FETCH_OPERATIONS',\r\n  REMOVE_OPERATION: 'REMOVE_OPERATION',\r\n};\r\n","import * as consts from './constants';\r\nimport moment from 'moment';\r\n\r\nexport const moneyFormat = value => `${value.toFixed(2)} \\u{20BD}`;\r\n\r\nexport const operationName = type => {\r\n  const operations = {\r\n    [consts.OPERATION_CREDIT]: 'Расход',\r\n    [consts.OPERATION_DEBIT]: 'Доход',\r\n  };\r\n  return operations[type] || 'Unknown operation';\r\n};\r\n\r\nexport const operationCssClass = type => {\r\n  const operations = {\r\n    [consts.OPERATION_CREDIT]: 'credit',\r\n    [consts.OPERATION_DEBIT]: 'debit',\r\n  };\r\n  return operations[type] || null;\r\n};\r\n\r\nexport const calcBalance = (operations, initialBalance = 0) => {\r\n  return operations.reduce((balance, operation) => {\r\n    return operation.type === consts.OPERATION_CREDIT\r\n      ? (balance -= operation.amount)\r\n      : (balance += operation.amount);\r\n  }, initialBalance);\r\n};\r\n\r\nexport const parsePeriodBorders = (time, period = 'week') => {\r\n  let periodFormat = {\r\n      week: 'D MMMM YYYY',\r\n      mounth: 'MMMM YYYY',\r\n    },\r\n    parseFormats = {\r\n      week: 'YYYY[W]WW',\r\n      mounth: 'YYYY[M]MM',\r\n    },\r\n    date = moment(time, parseFormats[period]),\r\n    start = date.startOf(period).format(periodFormat[period]),\r\n    end = date.endOf(period).format(periodFormat[period]);\r\n\r\n  return {\r\n    start,\r\n    end,\r\n  };\r\n};\r\n\r\nexport const sortOperations = (opA, opB) => {\r\n  if (opA.type === opB.type) return opA.timestamp - opB.timestamp;\r\n\r\n  if (opA.type === consts.OPERATION_CREDIT) return 1;\r\n\r\n  return -1;\r\n};\r\n","export const OPERATION_CREDIT = 'OPERATION_CREDIT';\r\nexport const OPERATION_DEBIT = 'OPERATION_DEBIT';\r\n\r\nexport const PERIOD_NONE = 'PERIOD_NONE';\r\nexport const PERIOD_WEEK = 'PERIOD_WEEK';\r\n","import actionTypes from '../actionTypes/operations';\r\n\r\nimport { calcBalance } from '../../helpers/functions';\r\n\r\nconst initialState = {\r\n  balance: 0,\r\n  operations: [],\r\n};\r\n\r\nconst operationHandler = {\r\n  [actionTypes.FETCH_OPERATIONS](state, { operations }) {\r\n    const oldBalance = state.balance,\r\n      balance = calcBalance(operations, oldBalance);\r\n\r\n    return {\r\n      ...state,\r\n      balance,\r\n      operations,\r\n    };\r\n  },\r\n\r\n  [actionTypes.ADD_OPERATION](state, { operation }) {\r\n    const operations = [...state.operations, operation],\r\n      { balance } = state;\r\n\r\n    return {\r\n      ...state,\r\n      operations,\r\n      balance: calcBalance([operation], balance),\r\n    };\r\n  },\r\n\r\n  [actionTypes.REMOVE_OPERATION](state, { operation }) {\r\n    const operations = state.operations.filter(\r\n      item => item.id !== operation.id\r\n    );\r\n\r\n    return {\r\n      ...state,\r\n      operations,\r\n      balance: calcBalance(operations, 0),\r\n    };\r\n  },\r\n};\r\n\r\nexport default (state = initialState, action) =>\r\n  operationHandler[action.type]\r\n    ? operationHandler[action.type](state, action)\r\n    : state;\r\n","import actionTypes from '../actionTypes/filters';\r\n\r\nimport { PERIOD_WEEK } from '../../helpers/constants';\r\n\r\nconst initialState = {\r\n  period: PERIOD_WEEK,\r\n};\r\n\r\nconst filtersHandler = {\r\n  [actionTypes.SET_PERIOD](state, { period }) {\r\n    return {\r\n      ...state,\r\n      period,\r\n    };\r\n  },\r\n};\r\n\r\nexport default (state = initialState, action) =>\r\n  filtersHandler[action.type]\r\n    ? filtersHandler[action.type](state, action)\r\n    : state;\r\n","export default {\r\n  SET_PERIOD: 'SET_PERIOD',\r\n};\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport { createLogger } from 'redux-logger';\r\n\r\nimport operations from './reducers/operations';\r\nimport filters from './reducers/filters';\r\n\r\nconst logger = createLogger({\r\n  collapsed: true,\r\n});\r\n\r\nexport const store = createStore(\r\n  combineReducers({\r\n    operations,\r\n    filters,\r\n  }),\r\n  composeWithDevTools(applyMiddleware(thunk, logger))\r\n);\r\n","import axios from 'axios';\r\n\r\nconst baseURL = process.env.REACT_APP_ENDPOINT,\r\n  instance = axios.create({\r\n    baseURL,\r\n  });\r\n\r\ninstance.defaults.headers.common['Content-Type'] =\r\n  'application/json; charset=UTF-8';\r\n\r\nexport default instance;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { moneyFormat } from '../../helpers/functions';\r\n\r\nconst WalletInfo = ({ balance }) => {\r\n  return (\r\n    <div>\r\n      <span>Текущий остаток:</span>\r\n      <strong>{moneyFormat(balance)}</strong>\r\n    </div>\r\n  );\r\n};\r\n\r\nWalletInfo.propTypes = {\r\n  balance: PropTypes.number.isRequired,\r\n};\r\nexport default WalletInfo;\r\n","import React from 'react';\r\nimport ReactModal from 'react-modal';\r\nimport { confirmable, createConfirmation } from 'react-confirm';\r\n\r\nimport './Modal.scss';\r\n\r\nReactModal.setAppElement('#root');\r\n\r\nconst Modal = ({\r\n  show,\r\n  dismiss,\r\n  proceed,\r\n  cancel,\r\n  component: ModalContent,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <ReactModal\r\n      isOpen={show}\r\n      onRequestClose={dismiss}\r\n      className=\"modal-window\"\r\n      overlayClassName=\"react-overlay\">\r\n      <ModalContent {...props} proceed={proceed} dismiss={dismiss} />\r\n    </ReactModal>\r\n  );\r\n};\r\n\r\nexport default function confirm(component, props) {\r\n  return createConfirmation(confirmable(Modal))({ component, ...props });\r\n}\r\n","export const required = value =>\r\n  value ? undefined : 'Поле обязательно для заполнения';\r\nexport const mustBeNumber = value =>\r\n  isNaN(value) ? 'Значение должно быть числом' : undefined;\r\nexport const minValue = min => value =>\r\n  isNaN(value) || value >= min ? undefined : `Должно быть больше ${min}`;\r\nexport const composeValidators = (...validators) => value =>\r\n  validators.reduce((error, validator) => error || validator(value), undefined);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Form, Field } from 'react-final-form';\r\n\r\nimport * as c from '../../../../helpers/constants';\r\nimport { operationName } from '../../../../helpers/functions';\r\nimport {\r\n  required,\r\n  mustBeNumber,\r\n  minValue,\r\n  composeValidators,\r\n} from '../../../../helpers/validation';\r\n\r\nimport './CreateOperation.scss';\r\n\r\nconst CreateOperation = ({ submitHandler, dismiss = null }) => {\r\n  const options = [c.OPERATION_CREDIT, c.OPERATION_DEBIT],\r\n    initialValues = {\r\n      type: c.OPERATION_CREDIT,\r\n      amount: '',\r\n      description: null,\r\n    },\r\n    onSubmit = (value, form) => {\r\n      submitHandler({\r\n        ...value,\r\n        amount: Number(value.amount),\r\n        timestamp: new Date().getTime(),\r\n      });\r\n      form.reset();\r\n      dismiss && dismiss();\r\n    };\r\n\r\n  return (\r\n    <Form\r\n      onSubmit={onSubmit}\r\n      initialValues={initialValues}\r\n      render={({ handleSubmit, form, submitting, pristine }) => (\r\n        <form className=\"operation-form\" onSubmit={handleSubmit}>\r\n          <div className=\"operation-form_row\">\r\n            <h2>Добавить:</h2>\r\n          </div>\r\n          <div className=\"operation-form_row\">\r\n            <Field name=\"type\" component=\"select\" validate={required}>\r\n              {({ input }) => (\r\n                <label>\r\n                  Тип:\r\n                  <select {...input} id=\"type\" tabIndex=\"1\">\r\n                    {options.map((option, key) => (\r\n                      <option key={key} value={option}>\r\n                        {operationName(option)}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </label>\r\n              )}\r\n            </Field>\r\n            &nbsp;\r\n            <Field\r\n              name=\"amount\"\r\n              component=\"number\"\r\n              validate={composeValidators(required, mustBeNumber, minValue(0))}>\r\n              {({ input, meta }) => (\r\n                <label>\r\n                  Сумма:\r\n                  <input\r\n                    {...input}\r\n                    id=\"amount\"\r\n                    type=\"number\"\r\n                    placeholder=\"в рублях\"\r\n                    step=\"0.1\"\r\n                    min=\"0.1\"\r\n                    tabIndex=\"2\"\r\n                  />\r\n                  {meta.error && meta.touched && (\r\n                    <span className=\"error\">{meta.error}</span>\r\n                  )}\r\n                </label>\r\n              )}\r\n            </Field>\r\n          </div>\r\n          <div className=\"operation-form_row\">\r\n            <Field\r\n              id=\"description\"\r\n              name=\"description\"\r\n              component=\"textarea\"\r\n              placeholer=\"description\">\r\n              {({ input }) => (\r\n                <div className=\"operation-form_row\">\r\n                  <label htmlFor=\"description\">Описание</label>\r\n                  <textarea\r\n                    {...input}\r\n                    id=\"description\"\r\n                    cols=\"30\"\r\n                    rows=\"10\"\r\n                    tabIndex=\"3\"\r\n                  />\r\n                </div>\r\n              )}\r\n            </Field>\r\n          </div>\r\n\r\n          <div className=\"operation-form_row\">\r\n            <div className=\"buttons\">\r\n              <button\r\n                className=\"add\"\r\n                type=\"submit\"\r\n                disabled={submitting || pristine}\r\n                tabIndex=\"4\">\r\n                Добавить\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  form.reset();\r\n                  dismiss && dismiss();\r\n                }}\r\n                disabled={submitting}\r\n                tabIndex=\"5\">\r\n                Отмена\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nCreateOperation.propTypes = {\r\n  submitHandler: PropTypes.func.isRequired,\r\n  dismiss: PropTypes.func,\r\n};\r\n\r\nexport default CreateOperation;\r\n","import React from 'react';\r\n\r\nimport WalletInfo from './WalletInfo';\r\n\r\nimport confirm from './UI/Modal';\r\nimport CreateOperation from './UI/Forms/CreateOperation';\r\n\r\nconst Header = ({ balance, addOperation }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <WalletInfo balance={balance} />\r\n\r\n      <button\r\n        onClick={() => {\r\n          confirm(CreateOperation, {\r\n            submitHandler: addOperation,\r\n          });\r\n        }}>\r\n        add\r\n      </button>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { connect } from 'react-redux';\r\n\r\nimport { addOperation } from '../store/actions/operations';\r\n\r\nimport Header from '../components/Header';\r\n\r\nconst mapStateToProps = state => ({ balance: state.operations.balance });\r\n\r\nconst mapDispatchToProps = { addOperation };\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Header);\r\n","import axios from '../../configs/axios';\r\n\r\nimport actionTypes from '../actionTypes/operations';\r\n\r\nexport const fetchOperations = () => async dispatch => {\r\n  const res = await axios.get('/operation');\r\n\r\n  if (res.status !== 200) {\r\n    console.error(res);\r\n\r\n    return;\r\n  }\r\n\r\n  dispatch({\r\n    type: actionTypes.FETCH_OPERATIONS,\r\n    operations: res.data,\r\n  });\r\n};\r\n\r\nexport const addOperation = operation => async dispatch => {\r\n  const res = await axios.post('/operation', operation);\r\n\r\n  if (res.status !== 200) {\r\n    console.error(res);\r\n\r\n    return;\r\n  }\r\n\r\n  dispatch({\r\n    type: actionTypes.ADD_OPERATION,\r\n    operation,\r\n  });\r\n};\r\n\r\nexport const removeOperation = operation => async dispatch => {\r\n  const res = await axios.delete(`/operation/${operation.id}`);\r\n\r\n  if (res.status !== 204) {\r\n    console.error(res);\r\n\r\n    return false;\r\n  }\r\n\r\n  dispatch({\r\n    type: actionTypes.REMOVE_OPERATION,\r\n    operation,\r\n  });\r\n\r\n  return true;\r\n};\r\n","import { createSelector } from 'reselect';\r\n\r\nimport moment from 'moment';\r\n\r\nimport * as constants from '../../helpers/constants';\r\nimport { sortOperations } from '../../helpers/functions';\r\n\r\nexport const getOperations = state => state.operations.operations;\r\n\r\nexport const getPeriod = state => state.filters.period;\r\n\r\nexport const getGroupedOperations = createSelector(\r\n  [getOperations, getPeriod],\r\n  (operations, period) => {\r\n    switch (period) {\r\n      case constants.PERIOD_WEEK:\r\n        return operations.reduce((groups, operation) => {\r\n          let weekIndex = moment(operation.timestamp).format('YYYY[W]WW\t'); // 2013W06 format\r\n\r\n          groups[weekIndex] = groups[weekIndex] || [];\r\n          groups[weekIndex].push(operation);\r\n\r\n          return groups;\r\n        }, {});\r\n      case constants.PERIOD_NONE:\r\n      default:\r\n        return operations;\r\n    }\r\n  }\r\n);\r\n\r\nexport const getSortedOperations = createSelector(\r\n  [getGroupedOperations, getPeriod],\r\n  (operations, period) => {\r\n    switch (period) {\r\n      case constants.PERIOD_WEEK:\r\n        Object.entries(operations).forEach(([week, operationsInWeek]) => {\r\n          operations[week] = operationsInWeek.sort(sortOperations);\r\n        });\r\n        return operations;\r\n      case constants.PERIOD_NONE:\r\n      default:\r\n        return operations.sort(sortOperations);\r\n    }\r\n  }\r\n);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\n\r\nimport './OperationListItem.scss';\r\n\r\nimport {\r\n  moneyFormat,\r\n  operationName,\r\n  operationCssClass,\r\n} from '../../helpers/functions';\r\n\r\nconst OperationListItem = ({\r\n  operation,\r\n  operation: { type, amount, description, timestamp },\r\n  editHandler,\r\n  removeHandler,\r\n}) => {\r\n  return (\r\n    <div className={`operation-list_item ${operationCssClass(type)}`}>\r\n      <div className=\"item_row\">\r\n        <span className=\"type\">\r\n          <strong>Операция: </strong>\r\n          {operationName(type)}\r\n        </span>\r\n        &nbsp;\r\n        <span className=\"amount\">\r\n          <strong>Сумма: </strong>\r\n          {moneyFormat(amount)}\r\n        </span>\r\n      </div>\r\n      {description ? (\r\n        <div className=\"item_row\">\r\n          <span className=\"description\">\r\n            <strong>Описание: </strong>\r\n            {description}\r\n          </span>\r\n        </div>\r\n      ) : null}\r\n      <div className=\"item_row controls\">\r\n        {/* <small onClick={() => editHandler(operation)} className=\"edit\">\r\n          редактировать\r\n        </small>\r\n        &nbsp; */}\r\n        <small onClick={() => removeHandler(operation)} className=\"remove\">\r\n          удалить\r\n        </small>\r\n      </div>\r\n      <div className=\"item_row\">\r\n        <small className=\"time\">\r\n          {moment(timestamp).fromNow()}\r\n          <span className=\"tooltip\">\r\n            {moment(timestamp).format('D MMMM YYYY HH:mm')}\r\n          </span>\r\n        </small>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nOperationListItem.propTypes = {\r\n  operation: PropTypes.object.isRequired,\r\n  editHandler: PropTypes.func.isRequired,\r\n  removeHandler: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default OperationListItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './OperationList.scss';\r\n\r\nimport OperationListItem from '../OperationListItem';\r\n\r\nconst OperationList = ({ operations, handlers }) => {\r\n  return (\r\n    <div className=\"operation-list\">\r\n      {operations.length ? (\r\n        operations.map((operation, key) => (\r\n          <OperationListItem\r\n            key={key}\r\n            operation={operation}\r\n            editHandler={handlers.editHandler}\r\n            removeHandler={handlers.removeHandler}\r\n          />\r\n        ))\r\n      ) : (\r\n        <div>there is no operations yet...</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nOperationList.propTypes = {\r\n  operations: PropTypes.array.isRequired,\r\n  handlers: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default OperationList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\nimport OperationList from '../OperationList';\r\nimport './OperationWeek.scss';\r\n\r\nimport { parsePeriodBorders } from '../../helpers/functions';\r\n\r\nconst OperationWeek = ({ operations, handlers }) => {\r\n  return (\r\n    <div className=\"operation-week\">\r\n      {Object.entries(operations).map(([week, operationsInWeek]) => {\r\n        const weekBorders = parsePeriodBorders(week, 'week');\r\n\r\n        return (\r\n          <div className=\"operation-week__item\" key={week}>\r\n            <span className=\"operation-week__item-label\">\r\n              {`${weekBorders.start} - ${weekBorders.end}`}\r\n            </span>\r\n            <Scrollbars>\r\n              <OperationList\r\n                operations={operationsInWeek}\r\n                handlers={handlers}\r\n              />\r\n            </Scrollbars>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nOperationWeek.propTypes = {\r\n  operations: PropTypes.object.isRequired,\r\n  handlers: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default OperationWeek;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './RemoveOperation.scss';\r\n\r\nconst RemoveOperation = ({ proceed, dismiss }) => {\r\n  return (\r\n    <div className=\"remove-operation\">\r\n      <div className=\"item_row\">\r\n        <h3>Удалить</h3>\r\n        <span>Вы уверены что хотите удалить эту операцию?</span>\r\n      </div>\r\n      <div className=\"item_row\">\r\n        <button className=\"error\" onClick={proceed}>\r\n          Да\r\n        </button>\r\n        <button onClick={dismiss}>Отмена</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nRemoveOperation.propTypes = {\r\n  proceed: PropTypes.func.isRequired,\r\n  dismiss: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default RemoveOperation;\r\n","import React, { useEffect } from 'react';\r\n\r\nimport OperationList from '../components/OperationList';\r\nimport OperationWeek from '../components/OperationWeek';\r\nimport * as constants from '../helpers/constants';\r\nimport confirm from './UI/Modal';\r\nimport RemoveOperation from './UI/Forms/RemoveOperation';\r\n\r\nconst TimeTable = ({\r\n  operations,\r\n  filters,\r\n  fetchOperations,\r\n  removeOperation,\r\n}) => {\r\n  useEffect(() => {\r\n    fetchOperations();\r\n  }, fetchOperations);\r\n\r\n  const handlers = {\r\n    editHandler: operation => console.log(operation),\r\n    removeHandler: operation =>\r\n      confirm(RemoveOperation)\r\n        .then(() => removeOperation(operation))\r\n        .catch(() => console.log('удаление отменено')),\r\n  };\r\n\r\n  switch (filters.period) {\r\n    case constants.PERIOD_WEEK:\r\n      return <OperationWeek operations={operations} handlers={handlers} />;\r\n    case constants.PERIOD_NONE:\r\n    default:\r\n      return <OperationList operations={operations} handlers={handlers} />;\r\n  }\r\n};\r\n\r\nexport default TimeTable;\r\n","import { connect } from 'react-redux';\r\n\r\nimport { getSortedOperations } from '../store/selectors';\r\n\r\nimport { fetchOperations, removeOperation } from '../store/actions/operations';\r\n\r\nimport TimeTable from '../components/TimeTable';\r\n\r\nconst mapStateToProps = state => ({\r\n  operations: getSortedOperations(state),\r\n  filters: state.filters,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  fetchOperations,\r\n  removeOperation,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TimeTable);\r\n","import React, { Component } from 'react';\n\nimport Header from './containers/Header';\nimport TimeTable from './containers/TimeTable';\n\nclass App extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Header />\n        <TimeTable />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { store } from './store';\r\n\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'moment/locale/ru';\r\n\r\nrender(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}